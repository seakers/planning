%% process_accesses.m 
% discretize access file generated by orekit
tab = readtable('.\path\to\access.csv');

%% Compute s from sat name
for j = 1:height(tab)
    sat = tab.sat{j};
    s = str2num(extractAfter(sat,length(sat)-2));
    tab.s(j) = s;
end

%% Compute p from incidence angle
MAX_inc_angle = 30*pi/180;
limit_angles = linspace(-MAX_inc_angle,MAX_inc_angle,13);
for j = 1:height(tab)
    angle = tab.incidence_angle(j);
    diffs = abs(angle - limit_angles);
    [~,p] = min(diffs);
    tab.p(j) = p;
end

%% Compute i from lat, lon
LLIndexes = java.util.HashMap();
n = 1;
for j = 1:height(tab)
    ll = java.util.ArrayList;
    lat = tab.lat(j);
    ll.add(lat);
    lon = tab.lon(j);
    ll.add(lon);
    if LLIndexes.containsKey(ll)
        tab.i(j) = LLIndexes.get(ll);
    else
        LLIndexes.put(ll,n);
        tab.i(j) = n;
        n = n + 1;
    end
end

%% Compute t from set times
TIndexes = java.util.HashMap();
TIndexes2 = java.util.HashMap();

m = 1;
for j = 1:height(tab)
    settime = tab.set_time(j);
    if TIndexes.containsKey(settime)
        tab.t(j) = TIndexes.get(settime);
    else
        TIndexes.put(settime,m);
        TIndexes2.put(m,settime);
        tab.t(j) = m;
        m = m + 1;
    end
end


%% add observation is true
for j = 1:height(tab)
    tab.obs(j) = 1;
end


%% write new table and check torques
writetable(tab,'.\path\to\save\discretized\access.csv');

%check_torques();